<?xml version="1.0" encoding="iso-8859-1" standalone="yes" ?>
<!--
    A sample installation file.
    Use it as a base for your own installers :-)

    To compile it :
    - go in the bin directory where you installed IzPack
    - call "compile ../sample/install.xml -b ../sample"
-->
<project name="caintegrator-gui-installer" default="build:installer" basedir=".">

	<property name="this.dir" value="${basedir}" />
	<property file="../project.properties" />
	<property name="software.location" location="${this.dir}/../.." />
	<property name="target.location" location="${software.location}/target" />
	<property name="dist.location" location="${target.location}/dist" />
	<property name="bda-utils.dir" location="${target.location}/bda-utils" />
	<property name="custom.resource.dir" location="${target.location}/izpack-4.3/resources"/>
	<property name="project.name" value="bda-blueprints"/>
	<property name="installer.dir" value=".installer-${project.name}"/>
	<property name="gui-installer.dist.base.name" value="caintegrator_gui_distribution_${caintegrator.version}.jar"/>
	<property name="install.zip.file" value="${caintegrator.install.zip.file}"/>
	<property name="upgrade.zip.file" value="${caintegrator.upgrade.zip.file}"/>

	<echoproperties/>
<echo message="compile.jar.dir ::: ${compile.jar.dir}"/>
<echo message="this.dir ::: ${this.dir}"/>

	<taskdef name="IzPack" classpath="${compile.jar.dir}/lib/compiler.jar" classname="com.izforge.izpack.ant.IzPackTask"/>

	<target name="prepare:installer">
		<replaceregexp file="${this.dir}/build.xml" byline="true"
			match="^(.*property name=.*application_installer_zip.*value=&quot;)[^&quot;]+(&quot;.*)"
			replace="\1${install.zip.file}\2"/>
		<replaceregexp file="${this.dir}/build.xml" byline="true"
			match="^(.*property name=.*application_upgrader_.*value=&quot;)[^&quot;]+(&quot;.*)"
			replace="\1${upgrade.zip.file}\2"/>
	</target>

	<target name="build:installer" depends="prepare:installer">
		<delete>
			<fileset dir="${dist.location}">
				<include name="${gui-installer.dist.base.name}*.jar"/>
			</fileset>
		</delete>
		<tstamp>
			<format property="build.time" pattern="yyyyMMddHHmm" />
		</tstamp>

		<IzPack output="${dist.location}/${gui-installer.dist.base.name}-${build.time}.jar"
			installerType="standard"
			basedir="."
			IzPackDir="${compile.jar.dir}/">
			<config><![CDATA[
			<installation version="1.0">

				<!--
				The info section.
				The meaning of the tags should be natural ...
				-->
				<info>
					<appname>caintegrator</appname>
					<appversion>@{caintegrator.version}</appversion>
					<authors>
					    <author name="NCI" email=""/>
					</authors>
					<url>https://cabig.nci.nih.gov/tools/caIntegrator2</url>
					<javaversion>1.6</javaversion>
				</info>

                <!--
                The gui preferences indication.
                Sets the installer window to 640x480. It will not be able to change the size.
                LOOK AND FEELS <laf/> (style: name in laf)
                Kunstoff: kunststoff
                Liquid: liquid (decorate.frames: yes means that it will render the frames in Liquid style)
                Substance: substance
                Metouia: metouia
                JGoodies Looks: looks (variants)
                    windows: use the Windows look
                    plastic: use the basic Plastic look
                    plastic3D: use the Plastic 3D look
                    plasticXP: use the Plastic XP look (default).
                -->
                <guiprefs width="1024" height="768" resizable="yes">
                    <laf name="liquid">
                        <os family="unix" />
                        <param name="decorate.frames" value="yes" />
                    </laf>
                    <!-- go with the default for now
                    <laf name="looks">
                        <os family="windows" />
                        <param name="variant" value="extwin" />
                    </laf>
                    -->
					<modifier key="useButtonIcons" value="no"/>
					<modifier key="useLabelIcons" value="no"/>
					<modifier key="allYGap" value="3"/>
					<modifier key="layoutAnchor" value="NORTHWEST"/>
					<modifier key="useHeadingPanel" value="yes"/>
					<modifier key="headingLineCount" value="1"/>
					<modifier key="headingFontSize" value="1.5"/>
					<modifier key="headingBackgroundColor" value="0x00ffffff"/>
					<modifier key="headingPanelCounter" value="text"/>
					<modifier key="headingPanelCounterPos" value="inHeading"/>
				</guiprefs>

				<!-- Need to define ant properties we want to use during install as variables -->
				<variables>

					<variable name="app.name" value="@{app.name}"/>
					<variable name="installer.dir" value="@{installer.dir}"/>
					<variable name="tomcat.binaries.relative.dir" value="@{tomcat.binaries.relative.dir}"/>
					<variable name="jboss.binaries.relative.dir" value="@{jboss.binaries.relative.dir}"/>
				</variables>

				<!--
				The locale section.
				Asks here to include the English and French langpacks.
				-->
				<locale>
					<langpack iso3="eng">
					    <str id="AntAction.core" txt="Proceeding of ANT-activities"/>
					    <str id="AntAction.install" txt="Revision of archives"/>
					</langpack>
				</locale>

				<conditions>
					<condition type="variable" id="install">
						<name>setup.type</name>
						<value>install</value>
					</condition>
					<condition type="variable" id="upgrade">
						<name>setup.type</name>
						<value>upgrade</value>
					</condition>
					<condition type="java" id="installonwindows">
						<java>
							<class>com.izforge.izpack.util.OsVersion</class>
							<field>IS_WINDOWS</field>
						</java>
						<returnvalue type="boolean">true</returnvalue>
					</condition>
					<condition type="java" id="installonlinux">
						<java>
							<class>com.izforge.izpack.util.OsVersion</class>
							<field>IS_LINUX</field>
						</java>
						<returnvalue type="boolean">true</returnvalue>
					</condition>
    				<condition type="variable" id="cas.install">
    			        <name>single.sign.on.install</name>
    			        <value>true</value>
    		        </condition>
    		        <condition type="and" id="display.authorization.select">
                        <condition type="ref" refid="!container.database" />
                        <condition type="ref" refid="!cas.install"/>
                    </condition>
					<condition type="variable" id="ldap.setup">
						<name>authentication.type</name>
						<value>ldap</value>
					</condition>
					<!-- Container selection -->
					<condition type="variable" id="container.all">
						<name>install.selection</name>
						<value>install.all</value>
					</condition>
					<condition type="variable" id="container.jboss">
						<name>install.selection</name>
						<value>install.jboss</value>
					</condition>
					<condition type="variable" id="container.tomcat">
						<name>install.selection</name>
						<value>install.tomcat</value>
					</condition>
					<condition type="variable" id="container.database">
						<name>install.selection</name>
						<value>install.database</value>
					</condition>
				</conditions>
				<!-- Identify your build targets for each of the containers for both install and upgrade -->
				<dynamicvariables>
					<variable name="build.file.target" value="install" condition="install+container.all" />
					<variable name="build.file.target" value="install:jboss" condition="install+container.jboss" />
					<variable name="build.file.target" value="install:tomcat" condition="install+container.tomcat" />
					<variable name="build.file.target" value="install:database" condition="install+container.database" />
					<variable name="build.file.target" value="upgrade" condition="upgrade+container.all" />
					<variable name="build.file.target" value="upgrade:jboss" condition="upgrade+container.jboss" />
					<variable name="build.file.target" value="upgrade:tomcat" condition="upgrade+container.tomcat" />
					<variable name="build.file.target" value="upgrade:database" condition="upgrade+container.database" />

					<!-- conditionals for containers not chosen -->
					<variable name="jboss.relative.path" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.server.hostname" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.web.user" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.web.password" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.server.ports.name" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.server.jndi.port" value="" condition="container.database|container.tomcat"/>
					<!-- Set to zero so math for jboss.ssl.port works -->
					<variable name="jboss.server.port" value="0" condition="container.database|container.tomcat"/>
					<variable name="jboss.cobraorb.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.ejbinvoker.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.hajndi.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.hajrmi.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.jms.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.jmx-rmi.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.messaging.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.pooledha.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.remoting.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.server.bind.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.server.rmi.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.service.rmiobject.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.snmp.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.snmp-trapd.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.web.service.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.unifiedinvoker.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.hajndi.auto.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.ssl.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.jms2.netty.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.jms2.netty-ssl.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.transaction.recovery.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.transaction.status.port" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.transaction.processid.port" value="" condition="container.database|container.tomcat"/>

                    <variable name="jboss.ssl.enable" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.ssl.keystore.location" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.ssl.keystore.pass" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.ssl.keystore.alias" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.ssl.fullyqualified.hostname" value="" condition="container.database|container.tomcat"/>
					<variable name="exclude.jboss.backup" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.java.opts" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.external.http.host" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.external.http.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.external.ssl.host" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.external.ssl.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.external.grid.secure.host" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.external.grid.secure.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.grid.secure.enable" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.grid.secure.port" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.grid.secure.cert.location" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.grid.secure.key.location" value="" condition="container.database|container.tomcat"/>
                    <variable name="jboss.http-connector.remove" value="" condition="container.database|container.tomcat"/>
					<variable name="jboss.server.redirect.port" value="" condition="container.database|container.tomcat"/>
					<variable name="log4j.maxFileSize" value="" condition="container.database|container.tomcat"/>
					<variable name="log4j.maxDays" value="" condition="container.database|container.tomcat"/>
					<variable name="log4j.level" value="" condition="container.database|container.tomcat"/>

					<variable name="tomcat.relative.path" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.hostname" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.port.http" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.port.ajp" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.port.ssl" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.port.shutdown" value="" condition="container.database|container.jboss"/>
					<variable name="exclude.tomcat.backup" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.ssl.enable" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.ssl.keystore.location" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.ssl.keystore.pass" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.ssl.keystore.alias" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.ssl.fullyqualified.hostname" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.external.http.host" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.external.http.port" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.external.ssl.host" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.external.ssl.port" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.external.grid.secure.host" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.external.grid.secure.port" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.grid.secure.enable" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.grid.secure.port" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.grid.secure.cert.location" value="" condition="container.database|container.jboss"/>
					<variable name="tomcat.grid.secure.key.location" value="" condition="container.database|container.jboss"/>
                    <variable name="tomcat.http-connector.remove" value="" condition="container.database|container.jboss"/>

					<variable name="grid.index.url" value="" condition="container.database"/>
					<variable name="grid.poc.tech.researchCenter.displayname" value="" condition="container.database"/>
					<variable name="grid.poc.tech.researchCenter.shortname" value="" condition="container.database"/>
					<variable name="grid.poc.tech.addr.country" value="" condition="container.database"/>
					<variable name="grid.poc.tech.addr.locality" value="" condition="container.database"/>
					<variable name="grid.poc.tech.addr.postalCode" value="" condition="container.database"/>
					<variable name="grid.poc.tech.addr.stateProvince" value="" condition="container.database"/>
					<variable name="grid.poc.tech.addr.street1" value="" condition="container.database"/>
					<variable name="grid.poc.tech.addr.street2" value="" condition="container.database"/>
					<variable name="grid.poc.tech.affiliation" value="" condition="container.database"/>
					<variable name="grid.poc.tech.name.last" value="" condition="container.database"/>
					<variable name="grid.poc.tech.name.first" value="" condition="container.database"/>
					<variable name="grid.poc.tech.phone" value="" condition="container.database"/>
					<variable name="grid.poc.tech.email" value="" condition="container.database"/>
					<variable name="grid.poc.tech.role" value="" condition="container.database"/>
					<variable name="grid.poc.science.affiliation" value="" condition="container.database"/>
					<variable name="grid.poc.science.name.last" value="" condition="container.database"/>
					<variable name="grid.poc.science.name.first" value="" condition="container.database"/>
					<variable name="grid.poc.science.phone" value="" condition="container.database"/>
					<variable name="grid.poc.science.email" value="" condition="container.database"/>
					<variable name="grid.poc.science.role" value="" condition="container.database"/>

					<variable name="ldap.url" value="" condition="container.database|cas.install"/>
					<variable name="ldap.basedn" value="" condition="container.database|cas.install"/>
					<variable name="mail.smtp.host" value="" condition="container.database"/>
					<variable name="mail.smtp.port" value="" condition="container.database"/>
					<variable name="mail.smtp.auth" value="" condition="container.database"/>
					<variable name="mail.smtp.starttls.enable" value="" condition="container.database"/>
					<variable name="mail.user" value="" condition="container.database"/>
					<variable name="mail.password" value="" condition="container.database"/>
					<variable name="authentication.type" value="" condition="container.database"/>
				</dynamicvariables>

				<!--
				The resources section.
				The ids must be these ones if you want to use the LicencePanel and/or the InfoPanel.
				-->
				<resources>
					<res id="Installer.image"  src="@{this.dir}/logotype.png"/>
					<res id="AntActionsSpec.xml" src="@{this.dir}/antActionSpec.xml" />
					<res id="HTMLLicencePanel.licence" src="@{custom.resource.dir}/Licence.html"/>
					<res id="InfoPanel.info" src="@{this.dir}/Readme.txt"/>
					<res id="userInputSpec.xml" src="@{this.dir}/userInputSpec.xml" />
					<res id="CustomActionsLang.xml_eng" src="@{this.dir}/custom_eng.xml"/>
					<res id="UserPathPanel.dir.windows" src="@{this.dir}/windir.txt"/>
					<res id="UserPathPanel.dir.linux" src="@{this.dir}/linuxdir.txt" />
				</resources>

				<!--
				The panels section.
				We indicate here which panels we want to use. The order will be respected.
				<panel classname="PacksPanel" id="myuserinput" condition="pack2selected" />
				-->
				<panels>
					<panel classname="HelloPanel"/>
					<panel classname="InfoPanel"/>
					<panel classname="HTMLLicencePanel"/>
					<panel classname="UserInputPanel"  id="UserInputPanel.0" />
					<!-- Typical or Custom
					<panel classname="UserInputPanel"  id="UserInputPanel.1" condition="never"/>
					-->
					<panel classname="UserPathPanel" id="UserPathPanelInstallation" condition="install"/>
					<!-- Contaner selection -->
					<panel classname="UserInputPanel"  id="UserInputPanel.1"/>
					<!-- Upgrade, specify app homes and read properties -->
					<panel classname="UserInputPanel"  id="UserInputPanel.2" condition="upgrade"/>
					<!-- Upgrade, read props -->
					<panel classname="UserInputPanel"  id="UserInputPanel.3" condition="upgrade+container.all"/>
					<panel classname="UserInputPanel"  id="UserInputPanel.4" condition="upgrade+container.jboss"/>
					<panel classname="UserInputPanel"  id="UserInputPanel.5" condition="upgrade+container.tomcat"/>
					<panel classname="UserInputPanel"  id="UserInputPanel.6" condition="upgrade+container.database"/>
					<!-- Jboss Configuration -->
					<panel classname="UserInputPanel"  id="UserInputPanel.7" condition="container.jboss|container.all"/>
					<!-- Jboss Continued -->
					<panel classname="UserInputPanel"  id="UserInputPanel.8" condition="container.jboss|container.all"/>
					<!-- Jboss SSL 0.9.0 -->
					<panel classname="UserInputPanel"  id="UserInputPanel.9" condition="container.jboss|container.all"/>
					<!-- external host stuff jboss -->
					<panel classname="UserInputPanel"  id="UserInputPanel.10" condition="container.jboss|container.all"/>
					<!-- Enable SSO  -->
					<panel classname="UserInputPanel"  id="UserInputPanel.11" condition="!container.database"/>
                    <!-- CAS Settings -->
                    <panel classname="UserInputPanel"  id="UserInputPanel.12" condition="cas.install"/>
					<!-- Authentication Type -->
					<panel classname="UserInputPanel"  id="UserInputPanel.13" condition="display.authorization.select"/>
					<!-- Ldap data entry -->
					<panel classname="UserInputPanel"  id="UserInputPanel.14" condition="ldap.setup"/>
					<!-- Database Properties -->
					<panel classname="UserInputPanel"  id="UserInputPanel.15"/>
					<!-- Global Configuraiton Options -->
					<panel classname="UserInputPanel"  id="UserInputPanel.16" condition="!container.database"/>
					<!-- UPT Configuration -->
                    <panel classname="UserInputPanel"  id="UserInputPanel.17" />
					<!-- Grid Global Configuration -->
					<panel classname="UserInputPanel"  id="UserInputPanel.18" condition="never"/>
					<!-- Grid Research Center -->
					<panel classname="UserInputPanel"  id="UserInputPanel.19" condition="never"/>
					<!-- Grid Tech Contact -->
					<panel classname="UserInputPanel"  id="UserInputPanel.20" condition="never"/>
					<!-- Grid Science Contact -->
					<panel classname="UserInputPanel"  id="UserInputPanel.21" condition="never"/>
					<!-- Application Specific Properties -->
					<!-- Tomcat Base Config 0.9.0 -->
					<panel classname="UserInputPanel"  id="UserInputPanel.22" condition="never"/>
					<!-- Tomcat SSL 0.9.0 -->
					<panel classname="UserInputPanel"  id="UserInputPanel.23" condition="never"/>
					<!-- external host stuff tomcat -->
					<panel classname="UserInputPanel"  id="UserInputPanel.24" condition="never"/>
					<!-- Jar Signing 1.5.0 -->
					<panel classname="UserInputPanel"  id="UserInputPanel.25" condition="container.tomcat|container.all|container.jboss"/>
					<!-- Installation Summary -->
					<panel classname="UserInputPanel"  id="UserInputPanel.26" />
					<panel classname="InstallationGroupPanel"/>
					<panel classname="ExtendedInstallPanel"/>
					<panel classname="FinishPanel"/>
				</panels>

				<listeners>
					<listener installer="SummaryLoggerInstallerListener">
						<os family="windows"/>
					</listener>

					<listener installer="ProgressBarInstallerListener"/>

					<listener installer="AntActionInstallerListener" uninstaller="AntActionUninstallerListener" />
				</listeners>

				<!--
				The packs section.
				We specify here our packs.
				-->
				<packs>
					<pack name="download_install" id="download_install" installGroups="caintegrator" required="no">
					    <description>The base files</description>
					    <file src="@{dist.location}/@{install.zip.file}" targetdir="$SYSTEM_user_home/@{installer.dir}"/>
					    <file src="@{this.dir}/build.xml" targetdir="$SYSTEM_user_home/@{installer.dir}"/>
					    <file src="@{this.dir}/property-template" override="true" targetdir="$SYSTEM_user_home/@{installer.dir}">
						<excludes>**/.svn/**</excludes>
					    </file>
					</pack>

					<pack name="parse-install" required="no" preselected="no" condition="install">
					    <description>parse the input values</description>
					    <parsable targetfile="$SYSTEM_user_home/@{installer.dir}/caintegrator_installer/install.properties" type="javaprop" />
					</pack>

					<pack name="parse-upgrade" required="no" preselected="no" condition="upgrade">
					    <description>parse the input values</description>
					    <parsable targetfile="$SYSTEM_user_home/@{installer.dir}/caintegrator_installer/upgrade.properties" type="javaprop" />
					</pack>

					<pack name="convert-install-path" required="no" preselected="no" condition="install">
					    <description>installation base path</description>
					</pack>

					<pack name="convert-upgrade-path" required="no" preselected="no" condition="upgrade">
					    <description>Upgrade base path</description>
					</pack>

					<pack name="install-application" required="no" preselected="no" condition="install">
					    <description>install the application</description>
					</pack>

				</packs>
				<jar src="@{bda-utils.dir}/ant-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-jai-1.8.2.jar" stage="both"/>
			    <jar src="@{bda-utils.dir}/ant-antlr-1.8.2.jar" stage="both"/>
			    <jar src="@{bda-utils.dir}/ant-nodeps-1.8.1.jar" stage="both"/>
			    <jar src="@{bda-utils.dir}/ant-apache-bcel-1.8.2.jar" stage="both"/>
			    <jar src="@{bda-utils.dir}/ant-apache-bsf-1.8.2.jar" stage="both"/>
				<jar src="@{bda-utils.dir}/xml-resolver-1.2.jar" stage="both"/>
				<jar src="@{bda-utils.dir}/mysql-connector-java-5.1.13.jar" stage="both"/>
				<jar src="@{bda-utils.dir}/ojdbc14-10.2.0.3.0.jar" stage="both"/>
				<jar src="@{bda-utils.dir}/postgresql-8.4-701.jdbc3.jar" stage="both"/>
				<jar src="@{bda-utils.dir}/ant-apache-log4j-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-apache-oro-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-apache-regexp-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-apache-resolver-1.8.2.jar" stage="both" />
			    <jar src="@{bda-utils.dir}/ant-apache-xalan2-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-commons-logging-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-commons-net-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-javamail-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-jdepend-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-jmf-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-jsch-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-junit-1.8.2.jar" stage="both" />
			    <jar src="@{bda-utils.dir}/ant-launcher-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-netrexx-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-swing-1.8.2.jar" stage="both" />
				<jar src="@{bda-utils.dir}/ant-testutil-1.8.2.jar" stage="both" />

			</installation>
		]]></config>
		</IzPack>
		<property name="pre-install.dir" value="${target.location}/working/pre-install"/>
		<property name="build.dir" value="${software.location}/build"/>
		<mkdir dir="${pre-install.dir}"/>
		<copy tofile="${pre-install.dir}/install.xml" file="${build.dir}/install.xml" overwrite="true"/>
		<copy tofile="${pre-install.dir}/project.properties" file="${build.dir}/project.properties" overwrite="true"/>
		<echo file="${pre-install.dir}/install.properties" message=""/>

		<copy todir="${pre-install.dir}/bda-utils" overwrite="true">
			<fileset dir="${bda-utils.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
		<jar update="true" destfile="${dist.location}/${gui-installer.dist.base.name}-${build.time}.jar"
			basedir="${target.location}/working"
			includes="pre-install/**/*"
			/>
	</target>
</project>
