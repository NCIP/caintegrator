<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<policy>
    <!-- Used by clients within the application server VM such as mbeans and servlets that access EJBs. -->
    <application-policy name="client-login">
        <authentication>
            <login-module code="org.jboss.security.ClientLoginModule" flag="required">
                <!-- Any existing security context will be restored on logout -->
                <module-option name="restore-login-identity">true</module-option>
            </login-module>
        </authentication>
    </application-policy>

    <!-- Security domains for testing new jca framework -->
    <application-policy name="HsqlDbRealm">
        <authentication>
            <login-module code="org.jboss.resource.security.ConfiguredIdentityLoginModule" flag="required">
                <module-option name="principal">sa</module-option>
                <module-option name="userName">sa</module-option>
                <module-option name="password" />
                <module-option name="managedConnectionFactoryName">jboss.jca:service=LocalTxCM,name=DefaultDS</module-option>
            </login-module>
        </authentication>
    </application-policy>

    <application-policy name="JmsXARealm">
        <authentication>
            <login-module code="org.jboss.resource.security.ConfiguredIdentityLoginModule" flag="required">
                <module-option name="principal">guest</module-option>
                <module-option name="userName">guest</module-option>
                <module-option name="password">guest</module-option>
                <module-option name="managedConnectionFactoryName">jboss.jca:service=TxCM,name=JmsXA</module-option>
            </login-module>
        </authentication>
    </application-policy>

    <!-- A template configuration for the jmx-console web application. This defaults to the UsersRolesLoginModule the same 
        as other and should be changed to a stronger authentication mechanism as required. -->
    <application-policy name="jmx-console">
        <authentication>
            <login-module code="org.jboss.security.auth.spi.UsersRolesLoginModule" flag="required">
                <module-option name="usersProperties">props/jmx-console-users.properties</module-option>
                <module-option name="rolesProperties">props/jmx-console-roles.properties</module-option>
            </login-module>
        </authentication>
    </application-policy>

    <!-- A template configuration for the web-console web application. This defaults to the UsersRolesLoginModule the same 
        as other and should be changed to a stronger authentication mechanism as required. -->
    <application-policy name="web-console">
        <authentication>
            <login-module code="org.jboss.security.auth.spi.UsersRolesLoginModule" flag="required">
                <module-option name="usersProperties">props/web-console-users.properties</module-option>
                <module-option name="rolesProperties">props/web-console-roles.properties</module-option>
            </login-module>
        </authentication>
    </application-policy>

    <!-- A template configuration for the JBossWS security domain. This defaults to the UsersRolesLoginModule the same as 
        other and should be changed to a stronger authentication mechanism as required. -->
    <application-policy name="JBossWS">
        <authentication>
            <login-module code="org.jboss.security.auth.spi.UsersRolesLoginModule" flag="required">
                <module-option name="usersProperties">props/jbossws-users.properties</module-option>
                <module-option name="rolesProperties">props/jbossws-roles.properties</module-option>
                <module-option name="unauthenticatedIdentity">anonymous</module-option>
            </login-module>
        </authentication>
    </application-policy>

    <!-- The default login configuration used by any security domain that does not have a application-policy entry with a 
        matching name -->
    <application-policy name="other">
        <!-- A simple server login module, which can be used when the number of users is relatively small. It uses two properties 
            files: users.properties, which holds users (key) and their password (value). roles.properties, which holds users (key) and 
            a comma-separated list of their roles (value). The unauthenticatedIdentity property defines the name of the principal that 
            will be used when a null username and password are presented as is the case for an unuathenticated web client or MDB. If 
            you want to allow such users to be authenticated add the property, e.g., unauthenticatedIdentity="nobody" -->
        <authentication>
            <login-module code="org.jboss.security.auth.spi.UsersRolesLoginModule" flag="required" />
        </authentication>
    </application-policy>

    <application-policy name="@application.context.name@">
        <authentication>
            <login-module code="com.fiveamsolutions.nci.commons.authentication.SessionFixationProtectionLoginModule" flag="required">
                <module-option name="migrateSessionAttributes">true</module-option>
            </login-module>

            <login-module code="gov.nih.nci.security.authentication.loginmodules.LDAPLoginModule" flag="sufficient">
                <module-option name="ldapHost">@ldap.url@</module-option>
                <module-option name="ldapSearchableBase">@ldap.basedn@</module-option>
                <module-option name="ldapUserIdLabel">cn</module-option>
            </login-module>
            <login-module code="gov.nih.nci.security.authentication.loginmodules.RDBMSLoginModule" flag="required">
                <module-option name="driver">@database.driver@</module-option>
                <module-option name="url">@database.url@</module-option>
                <module-option name="user">@database.user@</module-option>
                <module-option name="passwd">@database.password@</module-option>
                <module-option name="query">SELECT * FROM CSM_USER WHERE LOGIN_NAME=? and PASSWORD=?
                </module-option>
                <module-option name="encryption-enabled">YES </module-option>
            </login-module>
        </authentication>
    </application-policy>
</policy>
